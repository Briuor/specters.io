/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./client/camera.js":
/*!**************************!*\
  !*** ./client/camera.js ***!
  \**************************/
/***/ ((module) => {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nmodule.exports = /*#__PURE__*/function () {\n  function Camera(w, h, map) {\n    _classCallCheck(this, Camera);\n\n    this.y = 0;\n    this.x = 0;\n    this.w = w;\n    this.h = h;\n    this.maxX = map.cols * map.tsize - w;\n    this.maxY = map.rows * map.tsize - h;\n    this.following = null;\n    this.tileSetImage = new Image();\n    this.tileSetImage.src = './images/tileset.png';\n  }\n\n  _createClass(Camera, [{\n    key: \"follow\",\n    value: function follow(me) {\n      this.following = me;\n      me.screenX = 0;\n      me.screenY = 0;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      // Center player on screen\n      this.following.screenX = this.w / 2;\n      this.following.screenY = this.h / 2; // camera follow the player\n\n      this.x = this.following.x - this.w / 2;\n      this.y = this.following.y - this.h / 2; // console.log(this.following.x, this.following.y)\n      // Fixa os valores\n      // this.x = Math.max(0, Math.min(this.x, this.maxX));\n      // this.y = Math.max(-12*57, Math.min(this.y, this.maxY));\n      // left right limits\n      // if (this.following.x < this.w / 2 ||\n      //     this.following.x > this.maxX + this.w / 2) {\n      //     this.following.screenX = this.following.x - this.x;\n      // }\n      // // top bottom limits\n      // if (this.following.y < this.h / 2 ||\n      //     this.following.y > this.maxY + this.h / 2) {\n      //     this.following.screenY = this.following.y - this.y;\n      // }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, map) {\n      var startCol = Math.floor(this.x / map.tsize);\n      var endCol = startCol + this.w / map.tsize + 1;\n      var startRow = Math.floor(this.y / map.tsize);\n      var endRow = startRow + this.h / map.tsize + 1;\n      var offsetX = -this.x + startCol * map.tsize;\n      var offsetY = -this.y + startRow * map.tsize;\n\n      for (var c = startCol; c <= endCol; c++) {\n        for (var r = startRow; r <= endRow; r++) {\n          var tile = map.getTile(c, r);\n          var x = (c - startCol) * map.tsize + offsetX;\n          var y = (r - startRow) * map.tsize + offsetY;\n          var ty = 0;\n          if (typeof tile === 'undefined') ctx.drawImage(this.tileSetImage, (11 - 1) * map.tsize, 0, map.tsize, map.tsize, Math.round(x), Math.round(y), map.tsize, map.tsize);else {\n            if (tile > 17) {\n              tile = tile % 17;\n              ty = 1;\n            }\n\n            ctx.drawImage(this.tileSetImage, (tile - 1) * map.tsize, ty * 57, map.tsize, map.tsize, Math.round(x), Math.round(y), map.tsize, map.tsize);\n          }\n        }\n      }\n    }\n  }]);\n\n  return Camera;\n}();\n\n//# sourceURL=webpack://dduel.io/./client/camera.js?");

/***/ }),

/***/ "./client/game.js":
/*!************************!*\
  !*** ./client/game.js ***!
  \************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Map = __webpack_require__(/*! ../shared/map */ \"./shared/map.js\");\n\nvar Camera = __webpack_require__(/*! ./camera */ \"./client/camera.js\");\n\nvar State = __webpack_require__(/*! ./state */ \"./client/state.js\");\n\nvar Render = __webpack_require__(/*! ./render */ \"./client/render.js\");\n\nvar Input = __webpack_require__(/*! ./input */ \"./client/input.js\");\n\nvar Network = __webpack_require__(/*! ./network */ \"./client/network.js\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function Game() {\n    var _this = this;\n\n    _classCallCheck(this, Game);\n\n    this.leaderBoard = document.getElementById('leaderboard');\n    this.playAgainModal = document.getElementById('play-again-modal');\n    this.playAgainForm = document.getElementById('play-again-form');\n    this.namePlayAgainTextField = document.getElementById('name-play-again');\n    this.playAgainForm.addEventListener(\"submit\", function (e) {\n      e.preventDefault();\n      _this.playAgainModal.style.display = 'none';\n\n      _this.init();\n\n      window.localStorage.setItem('name', _this.namePlayAgainTextField.value);\n\n      _this.start(_this.namePlayAgainTextField.value);\n    });\n    this.canvas = document.getElementById('canvas');\n    this.canvas.style.background = \"black\";\n    this.ctx = this.canvas.getContext('2d');\n    this.gameWidth = 1280;\n    this.gameHeight = 720;\n    this.cwidth = window.innerWidth - 4;\n    this.cheight = window.innerHeight - 4;\n    this.resizeCanvas.bind(this);\n    window.addEventListener(\"resize\", function () {\n      _this.resizeCanvas();\n    });\n    this.init();\n  }\n\n  _createClass(Game, [{\n    key: \"init\",\n    value: function init() {\n      this.map = new Map();\n      this.camera = new Camera(this.gameWidth, this.gameHeight, this.map);\n      this.state = new State();\n      this.network = new Network();\n      this.render = new Render();\n      this.input = new Input();\n      this.loopRef = null;\n      this.gameOver = this.gameOver.bind(this);\n      this.resizeCanvas();\n    }\n  }, {\n    key: \"resizeCanvas\",\n    value: function resizeCanvas() {\n      this.cwidth = window.innerWidth - 4;\n      this.cheight = window.innerHeight - 4;\n      var ratio = 16 / 9;\n\n      if (this.cheight < this.cwidth / ratio) {\n        this.cwidth = this.cheight * ratio;\n      } else {\n        this.cheight = this.cwidth / ratio;\n      }\n\n      this.canvas.width = this.gameWidth;\n      this.canvas.height = this.gameHeight;\n      this.canvas.style.width = '' + this.cwidth + 'px';\n      this.canvas.style.height = '' + this.cheight + 'px';\n      this.ctx.mozImageSmoothingEnabled = false;\n      this.ctx.webkitImageSmoothingEnabled = false;\n      this.ctx.msImageSmoothingEnabled = false;\n      this.ctx.imageSmoothingEnabled = false;\n    }\n  }, {\n    key: \"removeChilds\",\n    value: function removeChilds(node) {\n      var last;\n\n      while (last = node.lastChild) {\n        node.removeChild(last);\n      }\n    }\n  }, {\n    key: \"updateLeaderBoard\",\n    value: function updateLeaderBoard(leaderBoard) {\n      var isTop10 = false;\n      this.removeChilds(this.leaderBoard);\n      var len = leaderBoard.length;\n\n      for (var i = 0; i < (len < 10 ? len : 10); i++) {\n        var player = leaderBoard[i];\n        var li = document.createElement('li');\n        var spanName = document.createElement('span');\n        var textnode = document.createTextNode(player.name);\n        spanName.appendChild(textnode);\n        var spanScore = document.createElement('span');\n        spanScore.className = 'leaderboard-score';\n        textnode = document.createTextNode(player.score);\n        spanScore.appendChild(textnode);\n        li.appendChild(spanName);\n        li.appendChild(spanScore);\n        this.leaderBoard.appendChild(li);\n      } // if (!isTop10) {\n      //     textnode = document.createTextNode(i + player.name + ' ' + player.score);\n      //     this.leaderBoard.appendChild(textnode);\n      // }\n\n    }\n  }, {\n    key: \"gameOver\",\n    value: function gameOver() {\n      this.network.socket.disconnect();\n      clearInterval(this.loopRef);\n      this.playAgainModal.style.display = \"block\";\n      this.namePlayAgainTextField.value = localStorage.getItem('name') ? localStorage.getItem('name') : 'unnamed';\n    } // Main Loop\n\n  }, {\n    key: \"run\",\n    value: function run() {\n      // get update\n      var _this$state$getCurren = this.state.getCurrentState(),\n          me = _this$state$getCurren.me,\n          otherPlayers = _this$state$getCurren.otherPlayers,\n          bullets = _this$state$getCurren.bullets,\n          leaderBoard = _this$state$getCurren.leaderBoard;\n\n      if (!me) return;\n      console.log(bullets);\n      this.camera.follow(me);\n      this.camera.update();\n      this.camera.following.scX = this.cwidth / 2;\n      this.camera.following.scY = this.cheight / 2; // clear screen\n\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height); // draw\n\n      this.camera.draw(this.ctx, this.map);\n      this.render.drawPlayer(this.ctx, me, this.gameOver);\n      this.render.drawPlayers(this.ctx, otherPlayers, bullets, this.camera);\n      this.updateLeaderBoard(leaderBoard);\n    }\n  }, {\n    key: \"start\",\n    value: function start(playerName) {\n      var _this2 = this;\n\n      this.canvas.style.display = 'block';\n      this.network.start(playerName);\n      this.input.listen(this.network, this.camera, this.canvas);\n      Promise.all([this.network.connect(this.state, this.loopRef, this.render)]).then(function () {\n        _this2.loopRef = setInterval(_this2.run.bind(_this2), 1000 / 60);\n      });\n    }\n  }]);\n\n  return Game;\n}();\n\n//# sourceURL=webpack://dduel.io/./client/game.js?");

/***/ }),

/***/ "./client/input.js":
/*!*************************!*\
  !*** ./client/input.js ***!
  \*************************/
/***/ ((module) => {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nmodule.exports = /*#__PURE__*/function () {\n  function Input() {\n    _classCallCheck(this, Input);\n  }\n\n  _createClass(Input, [{\n    key: \"listen\",\n    value: function listen(network, camera, canvas) {\n      var _this = this;\n\n      document.addEventListener('keydown', function (e) {\n        return _this.handleKeyBoardInput(e, true, network);\n      });\n      document.addEventListener('keyup', function (e) {\n        return _this.handleKeyBoardInput(e, false, network);\n      });\n      document.addEventListener('mousemove', function (e) {\n        return _this.handleMouseInput(e, 'mousemove', network, camera, canvas);\n      }, true);\n      document.addEventListener('click', function (e) {\n        return _this.handleMouseInput(e, 'mouseclick', network, camera, canvas);\n      }, true);\n    }\n  }, {\n    key: \"stopListen\",\n    value: function stopListen(network, camera) {\n      var _this2 = this;\n\n      document.removeEventListener('keydown', function (e) {\n        return _this2.handleKeyBoardInput(e, true, network);\n      });\n      document.removeEventListener('keyup', function (e) {\n        return _this2.handleKeyBoardInput(e, false, network);\n      });\n      document.removeEventListener('mousemove', function (e) {\n        return _this2.handleMouseInput(e, 'mousemove', network, camera);\n      });\n      document.removeEventListener('click', function (e) {\n        return _this2.handleMouseInput(e, 'mouseclick', network, camera);\n      });\n    }\n  }, {\n    key: \"isDirection\",\n    value: function isDirection(code) {\n      return code == 68 || code == 39 || code == 83 || code == 40 || code == 65 || code == 37 || code == 87 || code == 38;\n    }\n  }, {\n    key: \"handleKeyBoardInput\",\n    value: function handleKeyBoardInput(e, value, network) {\n      if (this.isDirection(e.which)) network.socket.emit('input', {\n        keyCode: e.which,\n        value: value,\n        type: 'keyboard'\n      });\n    }\n  }, {\n    key: \"handleMouseInput\",\n    value: function handleMouseInput(e, type, network, camera, canvas) {\n      if (camera.following) {\n        network.socket.emit('input', {\n          x: e.clientX - canvas.getBoundingClientRect().left,\n          y: e.clientY - canvas.getBoundingClientRect().top,\n          type: type,\n          screen: {\n            x: camera.following.scX,\n            y: camera.following.scY\n          }\n        });\n      }\n    }\n  }]);\n\n  return Input;\n}();\n\n//# sourceURL=webpack://dduel.io/./client/input.js?");

/***/ }),

/***/ "./client/network.js":
/*!***************************!*\
  !*** ./client/network.js ***!
  \***************************/
/***/ ((module) => {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nmodule.exports = /*#__PURE__*/function () {\n  function Network() {\n    _classCallCheck(this, Network);\n  }\n\n  _createClass(Network, [{\n    key: \"start\",\n    value: function start(name) {\n      var _this = this;\n\n      this.name = name;\n      this.socket = io('ws://localhost:3000');\n      this.connectPromise = new Promise(function (resolve) {\n        _this.socket.on('connect', function () {\n          _this.socket.emit('join', _this.name);\n\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(state, loopRef, render) {\n      var _this2 = this;\n\n      this.connectPromise.then(function () {\n        _this2.socket.on('update', function (newUpdate) {\n          state.handleUpdate(newUpdate);\n        });\n\n        _this2.socket.on('disconnect', function () {\n          clearInterval(loopRef);\n        });\n\n        _this2.socket.on('attack', function (id) {\n          render.attackList.push(id);\n        });\n\n        _this2.socket.on('die', function (id) {\n          render.dieList.push(id);\n        });\n      });\n    }\n  }]);\n\n  return Network;\n}();\n\n//# sourceURL=webpack://dduel.io/./client/network.js?");

/***/ }),

/***/ "./client/render.js":
/*!**************************!*\
  !*** ./client/render.js ***!
  \**************************/
/***/ ((module) => {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nmodule.exports = /*#__PURE__*/function () {\n  function Render() {\n    _classCallCheck(this, Render);\n\n    this.attackList = [];\n    this.dieList = []; // me\n\n    this.playerImage = new Image();\n    this.playerImage.src = './images/ghost2.png';\n    this.currentFrame = 0;\n    this.animationTime = Date.now();\n    this.animationDuration = 100;\n    this.meRay = 28; // me attack\n\n    this.attackAnimation = false;\n    this.dieAnimation = false; // other\n\n    this.ocurrentFrame = {};\n    this.oanimationTime = {};\n    this.oanimationDuration = 100; // other attack\n\n    this.oattackAnimation = {};\n    this.odieAnimation = {}; // projectile\n\n    this.projectileImage = new Image();\n    this.projectileImage.src = './images/projectile.png';\n    this.currentProjectileFrame = 0;\n    this.animationProjectileTime = Date.now();\n    this.animationProjectileDuration = 400;\n    this.bulletRay = 10;\n  }\n\n  _createClass(Render, [{\n    key: \"drawPlayer\",\n    value: function drawPlayer(ctx, me, gameOver) {\n      // ctx.fillStyle = me.color;\n      // ctx.beginPath();\n      // ctx.arc(me.screenX, me.screenY, me.r, 0, 2 * Math.PI);\n      // ctx.fill();\n      var col;\n      var angle = 180 * me.angle / Math.PI;\n      if (angle < 0) angle = 360 + angle;\n\n      if (this.attackList.length > 0 && this.attackList.includes(me.id)) {\n        this.currentFrame = 0;\n        this.attackAnimation = true;\n        this.attackList.splice(this.attackList.findIndex(function (id) {\n          return me.id == id;\n        }), 1);\n      }\n\n      if (this.dieList.length > 0 && this.dieList.includes(me.id)) {\n        this.attackAnimation = false;\n        this.currentFrame = 0;\n        this.dieAnimation = true;\n        this.dieList.splice(this.dieList.findIndex(function (id) {\n          return me.id == id;\n        }), 1);\n      } else {\n        if (angle >= 45 && angle < 135) {\n          //right\n          col = this.attackAnimation ? 5 : 1;\n        } else if (angle >= 135 && angle < 225) {\n          // down\n          col = this.attackAnimation ? 6 : 2;\n        } else if (angle >= 225 && angle < 315) {\n          // left\n          col = this.attackAnimation ? 4 : 0;\n        } else {\n          // top\n          col = this.attackAnimation ? 7 : 3;\n        }\n      }\n\n      if (this.dieAnimation) col = 8;\n      var totalFrames = this.attackAnimation ? 3 : 5;\n\n      if (this.dieAnimation) {\n        totalFrames = 5;\n      }\n\n      if (Date.now() - this.animationDuration >= this.animationTime) {\n        this.currentFrame = this.currentFrame >= totalFrames ? 0 : this.currentFrame + 1;\n        this.animationTime = Date.now();\n      }\n\n      if (this.dieAnimation && this.currentFrame == totalFrames && totalFrames == 5) {\n        this.dieAnimation = false;\n        gameOver();\n      }\n\n      if (this.attackAnimation && this.currentFrame == totalFrames && totalFrames == 3) {\n        this.attackAnimation = false;\n      }\n\n      ctx.drawImage(this.playerImage, this.currentFrame * this.meRay, col * 26, this.meRay, 26, me.screenX - this.meRay, me.screenY - this.meRay, this.meRay * 2, this.meRay * 2);\n    }\n  }, {\n    key: \"drawPlayers\",\n    value: function drawPlayers(ctx, otherPlayers, bullets, camera) {\n      var _this = this;\n\n      otherPlayers.forEach(function (p, index) {\n        return _this.drawOther(ctx, p, camera, p.id);\n      });\n      console.log('Other: ', otherPlayers);\n      bullets.forEach(function (b) {\n        return _this.drawBullet(ctx, b, camera);\n      });\n    }\n  }, {\n    key: \"drawOther\",\n    value: function drawOther(ctx, p, camera, index) {\n      // ctx.fillStyle = p.color;\n      // ctx.beginPath();\n      // ctx.arc(p.x - camera.x, p.y - camera.y, p.r, 0, 2 * Math.PI);\n      // ctx.fill();\n      if (this.oanimationTime[index] == null) {\n        this.oanimationTime[index] = 0;\n      }\n\n      if (this.ocurrentFrame[index] == null) {\n        this.ocurrentFrame[index] = 0;\n      }\n\n      var angle = 180 * p.angle / Math.PI;\n      if (angle < 0) angle = 360 + angle;\n\n      if (this.attackList.length > 0 && this.attackList.includes(p.id)) {\n        this.ocurrentFrame[index] = 0;\n        this.oattackAnimation[index] = true;\n        this.attackList.splice(this.attackList.findIndex(function (id) {\n          return p.id == id;\n        }), 1);\n      }\n\n      if (this.dieList.length > 0 && this.dieList.includes(p.id)) {\n        this.oattackAnimation[index] = false;\n        this.ocurrentFrame[index] = 0;\n        this.odieAnimation[index] = true;\n        this.dieList.splice(this.dieList.findIndex(function (id) {\n          return p.id == id;\n        }), 1);\n      }\n\n      var col;\n\n      if (angle >= 45 && angle < 135) {\n        //right\n        col = this.oattackAnimation[index] ? 5 : 1;\n      } else if (angle >= 135 && angle < 225) {\n        // down\n        col = this.oattackAnimation[index] ? 6 : 2;\n      } else if (angle >= 225 && angle < 315) {\n        // left\n        col = this.oattackAnimation[index] ? 4 : 0;\n      } else {\n        // top\n        col = this.oattackAnimation[index] ? 7 : 3;\n      }\n\n      if (this.odieAnimation[index]) col = 8;\n      var totalFrames = this.oattackAnimation[index] ? 3 : 5;\n\n      if (this.odieAnimation[index]) {\n        totalFrames = 5;\n      }\n\n      if (Date.now() - this.oanimationDuration >= this.oanimationTime[index]) {\n        this.ocurrentFrame[index] = this.ocurrentFrame[index] >= totalFrames ? 0 : this.ocurrentFrame[index] + 1;\n        this.oanimationTime[index] = Date.now();\n      }\n\n      if (this.dieAnimation[index] && this.currentFrame[index] == totalFrames && totalFrames == 5) {\n        this.dieAnimation[index] = false;\n      }\n\n      if (this.oattackAnimation[index] && this.ocurrentFrame[index] == 3 && totalFrames == 3) {\n        this.oattackAnimation[index] = false;\n      }\n\n      ctx.drawImage(this.playerImage, this.ocurrentFrame[index] * this.meRay, col * 26, this.meRay, 26, p.x - this.meRay - camera.x, p.y - this.meRay - camera.y, this.meRay * 2, this.meRay * 2);\n    }\n  }, {\n    key: \"drawBullet\",\n    value: function drawBullet(ctx, p, camera) {\n      // ctx.fillStyle = p.color;\n      // ctx.beginPath();\n      // ctx.arc(p.x - camera.x, p.y - camera.y, p.r, 0, 2 * Math.PI);\n      // ctx.fill();\n      ctx.save();\n      ctx.translate(p.x - camera.x, p.y - camera.y);\n      ctx.rotate(p.angle);\n      ctx.translate(-(p.x - camera.x), -(p.y - camera.y));\n\n      if (Date.now() - this.animationProjectileDuration >= this.animationProjectileTime) {\n        this.currentProjectileFrame = this.currentProjectileFrame >= 3 ? 0 : this.currentProjectileFrame + 1;\n        this.animationProjectileTime = Date.now();\n      }\n\n      ctx.drawImage(this.projectileImage, this.currentProjectileFrame * this.bulletRay, 0, this.bulletRay, this.bulletRay, p.x - this.bulletRay - camera.x, p.y - this.bulletRay - camera.y, this.bulletRay * 2, this.bulletRay * 2);\n      ctx.restore();\n    }\n  }]);\n\n  return Render;\n}();\n\n//# sourceURL=webpack://dduel.io/./client/render.js?");

/***/ }),

/***/ "./client/state.js":
/*!*************************!*\
  !*** ./client/state.js ***!
  \*************************/
/***/ ((module) => {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nmodule.exports = /*#__PURE__*/function () {\n  function State() {\n    _classCallCheck(this, State);\n\n    this.firstServerTimestamp = 0;\n    this.gameStart = 0;\n    this.updates = [];\n    this.RENDER_DELAY = 100;\n  }\n\n  _createClass(State, [{\n    key: \"currentServerTime\",\n    value: function currentServerTime() {\n      return this.firstServerTimestamp + (Date.now() - this.gameStart) - this.RENDER_DELAY;\n    }\n  }, {\n    key: \"getBaseUpdate\",\n    value: function getBaseUpdate() {\n      var serverTime = this.currentServerTime();\n\n      for (var i = this.updates.length - 1; i >= 0; i--) {\n        if (this.updates[i].t <= serverTime) {\n          return i;\n        }\n      }\n\n      return -1;\n    } // handle Update\n\n  }, {\n    key: \"getCurrentState\",\n    value: function getCurrentState() {\n      if (!this.firstServerTimestamp) {\n        return {};\n      }\n\n      var base = this.getBaseUpdate();\n      var serverTime = this.currentServerTime();\n      console.log(this.updates.length);\n\n      if (base < 0 || base === this.updates.length - 1) {\n        return this.updates[this.updates.length - 1];\n      } else {\n        var baseUpdate = this.updates[base];\n        var next = this.updates[base + 1];\n        var ratio = (serverTime - baseUpdate.t) / (next.t - baseUpdate.t);\n        return {\n          me: this.interpolateObject(baseUpdate.me, next.me, ratio),\n          otherPlayers: this.interpolateObjectArray(baseUpdate.otherPlayers, next.otherPlayers, ratio),\n          bullets: this.interpolateObjectArray(baseUpdate.bullets, next.bullets, ratio),\n          leaderBoard: baseUpdate.leaderBoard\n        };\n      }\n    }\n  }, {\n    key: \"interpolateObject\",\n    value: function interpolateObject(object1, object2, ratio) {\n      if (!object2) {\n        return object1;\n      }\n\n      var interpolated = {};\n      Object.keys(object1).forEach(function (key) {\n        if (key == 'x' || key == 'y') interpolated[key] = object1[key] + (object2[key] - object1[key]) * ratio;else if (key == 'angle' || key == 'id') {\n          interpolated[key] = object2[key];\n        }\n      });\n      return interpolated;\n    }\n  }, {\n    key: \"interpolateObjectArray\",\n    value: function interpolateObjectArray(objects1, objects2, ratio) {\n      var _this = this;\n\n      return objects1.map(function (o) {\n        return _this.interpolateObject(o, objects2.find(function (o2) {\n          return o.id === o2.id;\n        }), ratio);\n      });\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate(newUpdate) {\n      if (!this.firstServerTimestamp) {\n        this.firstServerTimestamp = newUpdate.t;\n        this.gameStart = Date.now();\n      }\n\n      this.updates.push(newUpdate);\n      var base = this.getBaseUpdate();\n\n      if (base > 0) {\n        this.updates.splice(0, base);\n      }\n    }\n  }]);\n\n  return State;\n}();\n\n//# sourceURL=webpack://dduel.io/./client/state.js?");

/***/ }),

/***/ "./shared/map.js":
/*!***********************!*\
  !*** ./shared/map.js ***!
  \***********************/
/***/ ((module) => {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nmodule.exports = /*#__PURE__*/function () {\n  function Map() {\n    _classCallCheck(this, Map);\n\n    this.cols = 50;\n    this.rows = 50;\n    this.tsize = 57;\n    this.tilesn  }\n\n  _createClass(Map, [{\n    key: \"getTile\",\n    value: function getTile(col, row) {\n      return this.tiles[row * this.cols + col];\n    }\n  }, {\n    key: \"isPositionLava\",\n    value: function isPositionLava(player) {\n      var tileX = Math.floor(player.x / this.tsize);\n      var tileY = Math.floor((player.y + 20) / this.tsize);\n      return this.tiles[tileY * this.cols + tileX] == 11;\n    }\n  }]);\n\n  return Map;\n}();\n\n//# sourceURL=webpack://dduel.io/./shared/map.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
(() => {
/*!*************************!*\
  !*** ./client/index.js ***!
  \*************************/
eval("var Game = __webpack_require__(/*! ./game */ \"./client/game.js\");\n\nwindow.onload = function () {\n  var game = new Game();\n  var playForm = document.getElementById('play-form');\n  var body = document.getElementsByTagName('body')[0];\n  var name = document.getElementById('name-play');\n  var gameName = document.getElementsByClassName('game-name')[0];\n  name.focus();\n  playForm.addEventListener('submit', function (e) {\n    e.preventDefault();\n    playForm.style.display = 'none';\n    gameName.style.display = 'none';\n    body.style.background = '#000';\n    body.style.cursor = 'crosshair';\n    localStorage.setItem('name', name.value);\n    game.start(name.value);\n  });\n};\n\n//# sourceURL=webpack://dduel.io/./client/index.js?");
})();

/******/ })()
;